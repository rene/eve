From 9eea2280494a822585f93ef106f82f9b8036cb82 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ren=C3=AA=20de=20Souza=20Pinto?= <rene@renesp.com.br>
Date: Sun, 11 May 2025 21:12:58 +0200
Subject: [PATCH] OvmfPkg/Library: Prioritize USB devices in the PCI list
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Move the translation of USB PCI devices to the beginning of checks in order
to make them appearing first in the PCI device list.

Signed-off-by: RenÃª de Souza Pinto <rene@renesp.com.br>
---
 .../QemuBootOrderLib/QemuBootOrderLib.c       | 91 ++++++++++---------
 1 file changed, 46 insertions(+), 45 deletions(-)

diff --git a/OvmfPkg/Library/QemuBootOrderLib/QemuBootOrderLib.c b/OvmfPkg/Library/QemuBootOrderLib/QemuBootOrderLib.c
index ceffb17fa6..4a35b2dfac 100644
--- a/OvmfPkg/Library/QemuBootOrderLib/QemuBootOrderLib.c
+++ b/OvmfPkg/Library/QemuBootOrderLib/QemuBootOrderLib.c
@@ -711,7 +711,52 @@ TranslatePciOfwNodes (
     return RETURN_UNSUPPORTED;
   }
 
-  if (NumNodes >= FirstNonBridge + 3 &&
+  if (NumNodes >= FirstNonBridge + 2 &&
+             SubstringEq (OfwNode[FirstNonBridge + 0].DriverName, "usb") &&
+             SubstringEq (OfwNode[FirstNonBridge + 1].DriverName, "storage")) {
+    //
+    // OpenFirmware device path (usb-storage device in XHCI port):
+    //
+    //   /pci@i0cf8/usb@3[,1]/storage@2/channel@0/disk@0,0
+    //        ^         ^  ^          ^         ^      ^ ^
+    //        |         |  |          |         fixed  fixed
+    //        |         |  |          XHCI port number, 1-based
+    //        |         |  PCI function corresponding to XHCI (optional)
+    //        |         PCI slot holding XHCI
+    //        PCI root at system bus port, PIO
+    //
+    // UEFI device path prefix:
+    //
+    //   PciRoot(0x0)/Pci(0x3,0x1)/USB(0x1,0x0)
+    //                        ^        ^
+    //                        |        XHCI port number in 0-based notation
+    //                        0x0 if PCI function is 0, or absent from OFW
+    //
+    RETURN_STATUS ParseStatus;
+    UINT64        OneBasedXhciPort;
+
+    NumEntries = 1;
+    ParseStatus = ParseUnitAddressHexList (
+                    OfwNode[FirstNonBridge + 1].UnitAddress,
+                    &OneBasedXhciPort,
+                    &NumEntries
+                    );
+    if (RETURN_ERROR (ParseStatus) || OneBasedXhciPort == 0) {
+      return RETURN_UNSUPPORTED;
+    }
+
+    Written = UnicodeSPrintAsciiFormat (
+                Translated,
+                *TranslatedSize * sizeof (*Translated), // BufferSize in bytes
+                "PciRoot(0x%x)%s/Pci(0x%Lx,0x%Lx)/USB(0x%Lx,0x0)",
+                PciRoot,
+                Bridges,
+                PciDevFun[0],
+                PciDevFun[1],
+                OneBasedXhciPort - 1
+                );
+
+    } else if (NumNodes >= FirstNonBridge + 3 &&
       SubstringEq (OfwNode[FirstNonBridge + 0].DriverName, "ide") &&
       SubstringEq (OfwNode[FirstNonBridge + 1].DriverName, "drive") &&
       SubstringEq (OfwNode[FirstNonBridge + 2].DriverName, "disk")
@@ -980,50 +1025,6 @@ TranslatePciOfwNodes (
       Eui64[7], Eui64[6], Eui64[5], Eui64[4],
       Eui64[3], Eui64[2], Eui64[1], Eui64[0]
       );
-  } else if (NumNodes >= FirstNonBridge + 2 &&
-             SubstringEq (OfwNode[FirstNonBridge + 0].DriverName, "usb") &&
-             SubstringEq (OfwNode[FirstNonBridge + 1].DriverName, "storage")) {
-    //
-    // OpenFirmware device path (usb-storage device in XHCI port):
-    //
-    //   /pci@i0cf8/usb@3[,1]/storage@2/channel@0/disk@0,0
-    //        ^         ^  ^          ^         ^      ^ ^
-    //        |         |  |          |         fixed  fixed
-    //        |         |  |          XHCI port number, 1-based
-    //        |         |  PCI function corresponding to XHCI (optional)
-    //        |         PCI slot holding XHCI
-    //        PCI root at system bus port, PIO
-    //
-    // UEFI device path prefix:
-    //
-    //   PciRoot(0x0)/Pci(0x3,0x1)/USB(0x1,0x0)
-    //                        ^        ^
-    //                        |        XHCI port number in 0-based notation
-    //                        0x0 if PCI function is 0, or absent from OFW
-    //
-    RETURN_STATUS ParseStatus;
-    UINT64        OneBasedXhciPort;
-
-    NumEntries = 1;
-    ParseStatus = ParseUnitAddressHexList (
-                    OfwNode[FirstNonBridge + 1].UnitAddress,
-                    &OneBasedXhciPort,
-                    &NumEntries
-                    );
-    if (RETURN_ERROR (ParseStatus) || OneBasedXhciPort == 0) {
-      return RETURN_UNSUPPORTED;
-    }
-
-    Written = UnicodeSPrintAsciiFormat (
-                Translated,
-                *TranslatedSize * sizeof (*Translated), // BufferSize in bytes
-                "PciRoot(0x%x)%s/Pci(0x%Lx,0x%Lx)/USB(0x%Lx,0x0)",
-                PciRoot,
-                Bridges,
-                PciDevFun[0],
-                PciDevFun[1],
-                OneBasedXhciPort - 1
-                );
   } else {
     //
     // Generic OpenFirmware device path for PCI devices:
-- 
2.47.2

