name: PR Approval Runner   # secrets-enabled stage
on:
  workflow_run:
    workflows: ["PR Approval Gate"]
    types: [completed]

permissions:
  contents: read
  actions:  read
  checks:   write

env:
  CHECK_NAME: Eden trusted tests

jobs:
  context:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      pr:       ${{ steps.parse.outputs.pr }}
      run_id:   ${{ steps.parse.outputs.run_id }}
      check_id: ${{ steps.open.outputs.id }}
    steps:
      - name: Download gate-context artifact
        uses: actions/download-artifact@v4
        with:
          name: gate-context
          run-id: ${{ github.event.workflow_run.id }}   # isolate to this Gate run
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - id: parse
        run: |
          echo "pr=$(jq -r '.pr'  gate-context.json)"      >> $GITHUB_OUTPUT
          echo "run_id=$(jq -r '.run' gate-context.json)"  >> $GITHUB_OUTPUT

      # create an "in-progress" check-run so PR shows Runner status
      - id: open
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const { owner, repo } = context.repo;
            const head_sha       = context.payload.workflow_run.head_sha;   // commit in the PR
            const name           = process.env.CHECK_NAME;
            const { data } = await github.checks.create({
              owner, repo,
              name,
              head_sha,
              status:     'in_progress',
              started_at: new Date().toISOString(),
              output: {
                title:   'Runner workflow started',
                summary: 'Executing Eden trusted tests â€¦'
              }
            });
            core.setOutput('id', data.id.toString());

  test_suite_pr:
    needs: context
    if: ${{ needs.context.outputs.pr != '' }}   # guard
    uses: lf-edge/eden/.github/workflows/test.yml@1.0.2
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        arch:     [amd64]
        hv:       [kvm]
        platform: ["generic"]
    with:
      eve_image:         "evebuild/pr:${{ needs.context.outputs.pr }}"
      eve_log_level:     "debug"
      eve_artifact_name: "eve-${{ matrix.hv }}-${{ matrix.arch }}-${{ matrix.platform }}"
      artifact_run_id:   ${{ needs.context.outputs.run_id }}
      eden_version:      "1.0.2"

  close_check:
    if: always()
    needs: [context, test_suite_pr]
    runs-on: ubuntu-latest
    steps:
      - name: Finalise PR check-run
        uses: actions/github-script@v7
        env:
          CHECK_ID: ${{ needs.context.outputs.check_id }}
          RESULT:   ${{ needs.test_suite_pr.result }}   # success / failure / cancelled
        with:
          script: |
            const { owner, repo } = context.repo;
            const id        = Number(process.env.CHECK_ID);
            const result    = process.env.RESULT;

            const conclusion = (
              result === 'success'   ? 'success'   :
              result === 'failure'   ? 'failure'   :
              result === 'cancelled' ? 'cancelled' : 'neutral'
            );

            await github.checks.update({
              owner, repo, check_run_id: id,
              status: 'completed',
              completed_at: new Date().toISOString(),
              conclusion,
              output: {
                title:   'Eden trusted tests',
                summary: `Workflow **${conclusion}**.\n\n[View logs](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})`
              }
            });
